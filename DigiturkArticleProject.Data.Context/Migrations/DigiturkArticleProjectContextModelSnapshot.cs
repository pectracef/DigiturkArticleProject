// <auto-generated />
using System;
using DigiturkArticleProject.Data.Context.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigiturkArticleProject.Data.Context.Migrations
{
    [DbContext(typeof(DigiturkArticleProjectContext))]
    partial class DigiturkArticleProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.Article", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("createdUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("subTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("updatedUserId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("createdUserId");

                    b.HasIndex("updatedUserId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.Comment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("articleId")
                        .HasColumnType("bigint");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("createdUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("parentCommentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("createdUserId");

                    b.HasIndex("parentCommentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.Role", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.RoleSystemAction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("roleId")
                        .HasColumnType("bigint");

                    b.Property<long>("systemActionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.HasIndex("systemActionId");

                    b.ToTable("RoleSystemAction");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.SystemAction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("actionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("controllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("SystemAction");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("roleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.Article", b =>
                {
                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.User", "createdUser")
                        .WithMany()
                        .HasForeignKey("createdUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.User", "updatedUser")
                        .WithMany()
                        .HasForeignKey("updatedUserId");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.Comment", b =>
                {
                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.Article", "article")
                        .WithMany("comments")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.User", "createdUser")
                        .WithMany()
                        .HasForeignKey("createdUserId");

                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.Comment", "parentComment")
                        .WithMany()
                        .HasForeignKey("parentCommentId");
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.RoleSystemAction", b =>
                {
                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.SystemAction", "systemAction")
                        .WithMany()
                        .HasForeignKey("systemActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigiturkArticleProject.Data.Model.Entities.User", b =>
                {
                    b.HasOne("DigiturkArticleProject.Data.Model.Entities.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
